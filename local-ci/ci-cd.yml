name: Async.Locks CI/CD Local

on: [push]

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:9.0.202
      volumes:
        - C:/Users/Uffe/Source/repos/Async/Locks:/github/workspace

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: /github/workspace
          fetch-depth: 0

      - name: Set up environment
        run: |
          pwd
          cd /github/workspace
          chmod +x scripts/ubuntu/setup.sh
          bash /github/workspace/scripts/ubuntu/setup.sh

      - name: Add .NET Global Tools to PATH
        run: echo "::add-path::/root/.dotnet/tools"

      - name: Restore dependencies
        run: dotnet msbuild ${{ env.PROJECT_ROOT }}/Async.Locks.sln /t:Restore

      - name: Build project
        run: dotnet msbuild ${{ env.PROJECT_ROOT }}/Async.Locks.sln /p:Configuration=Release

      - name: Get Version
        run: ${{ env.UBUNTU_SCRIPTS_DIR }}/gitversion.sh

      - name: Run unit tests
        run: |
          dotnet test ${{ env.TEST_PROJECT }} --configuration Release \
            --logger:"trx;LogFileName=${{ env.TEST_RESULTS_DIR }}/test-results.trx" \
            --settings ${{ env.PROJECT_ROOT }}/codecoverage.runsettings
        continue-on-error: false

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ env.TEST_RESULTS_DIR }}/*.trx

      - name: Run benchmarks
        run: dotnet run --project ${{ env.BENCHMARKS_DIR }} --configuration Release -f net9.0

      - name: Analyze Benchmark Results
        run: ${{ env.UBUNTU_SCRIPTS_DIR }}/analyze-benchmarks.sh ${{ env.BENCHMARK_RESULTS_DIR }}

  publish:
    name: Publish
    needs: build_and_test
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:9.0.202
      volumes:
        - C:/Users/Uffe/Source/repos/Async/Locks:/github/workspace

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: /github/workspace
          fetch-depth: 0

      - name: Set up environment
        run: |
          pwd
          ls -l /github/workspace/scripts/ubuntu/setup.sh
          chmod +x /github/workspace/scripts/ubuntu/setup.sh
          /github/workspace/scripts/ubuntu/setup.sh

      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT_ROOT }}/Async.Locks.sln

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ${{ env.BUILD_OUTPUT_DIR }}

      - name: Download GitVersion props
        uses: actions/download-artifact@v4
        with:
          name: gitversion-props
          path: ${{ env.GIT_VERSION_PROPS }}

      - name: Pack NuGet package
        run: |
          VERSION=$(grep AssemblyVersion ${{ env.GIT_VERSION_PROPS }} | cut -d '=' -f2)
          dotnet pack ${{ env.SRC_PROJECT }} --configuration Release --output ${{ env.PROJECT_ROOT }} -p:Version=$VERSION

      - name: Push NuGet package
        run: echo "NuGet package pushed (replace with your actual push command)"
